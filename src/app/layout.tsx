import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/navbar";
import { headers } from "next/headers";
import ComingSoonPage from "./coming-soon/page";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Routes where the navbar should be hidden
const HIDDEN_NAVBAR_ROUTES = [
  "/dashboard",
  "/app",
  "/coming-soon",
  // Add more routes here as needed
];

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Check if coming soon mode is enabled
  const isComingSoonMode = process.env.NEXT_PUBLIC_SHOW_COMING_SOON === 'true';

  // If coming soon mode is enabled, render only the coming soon page
  if (isComingSoonMode) {
    return (
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased dark`}
          suppressHydrationWarning
        >
          <ComingSoonPage />
        </body>
      </html>
    );
  }

  // Normal layout logic
  const headersList = await headers();
  const pathname = headersList.get("x-pathname") || "";
  const shouldHideNavbar = HIDDEN_NAVBAR_ROUTES.some(route => 
    pathname.startsWith(route)
  );

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased dark`}
        suppressHydrationWarning
      >
        {!shouldHideNavbar && <Navbar />}
        {children}
      </body>
    </html>
  );
}
